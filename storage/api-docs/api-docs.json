{
    "openapi": "3.0.0",
    "info": {
        "title": "Pet Shop API - Swagger Documentation",
        "description": "This API has been created with the goal to pass the coding skills test a job position at Buckhill",
        "version": "1.0.0"
    },
    "paths": {
        "/api/v1/admin/create": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Create a new admin account",
                "operationId": "42daecb3803af8cdd4cafdce4649bfd8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "last_name",
                                    "email",
                                    "password",
                                    "password_confirmation",
                                    "address",
                                    "phone_number"
                                ],
                                "properties": {
                                    "first_name": {
                                        "description": "The user's first name",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "last_name": {
                                        "description": "The user's last name",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "email": {
                                        "description": "The user's email address",
                                        "type": "string",
                                        "format": "email",
                                        "example": ""
                                    },
                                    "password": {
                                        "description": "The user's password",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "password_confirmation": {
                                        "description": "Password confirmation",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "address": {
                                        "description": "The user's address",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "phone_number": {
                                        "description": "The user's phone number",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "is_marketing": {
                                        "description": "Marketing consent",
                                        "type": "boolean",
                                        "example": "",
                                        "nullable": true
                                    },
                                    "avatar": {
                                        "description": "The user's avatar URL",
                                        "type": "string",
                                        "example": "",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Admin created successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/login": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Login an admin account",
                "operationId": "55cc63ee5c04f3076f6fa0834f9dae5e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/v1/admin/logout": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Logout an admin account",
                "operationId": "516773b68cf66704cd5a9a3fb1afe048",
                "responses": {
                    "200": {
                        "description": "Logout successful"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/user-listing": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "List all non-admin users with pagination and filters",
                "operationId": "1944480f78a8858b866ecaae327eb66d",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Sort by field",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "description": "Sort in descending order",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/user-edit/{uuid}": {
            "put": {
                "tags": [
                    "Admin"
                ],
                "summary": "Edit a non-admin user's account",
                "operationId": "e1e417d867eb0602a373ac98f7404a7c",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "type": "string"
                                    },
                                    "last_name": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "phone_number": {
                                        "type": "string"
                                    },
                                    "address": {
                                        "type": "string"
                                    },
                                    "is_marketing": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/user-delete/{uuid}": {
            "delete": {
                "tags": [
                    "Admin"
                ],
                "summary": "Delete a non-admin user's account",
                "operationId": "4475986cdd2ddfe35049d3a4f9a66752",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/categories": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get a list of categories",
                "operationId": "52c3c8d702572c2b4347b0ecf7573e54",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items per page",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Field to sort by",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "description": "Sort in descending order",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of categories"
                    },
                    "401": {
                        "description": "UnAuthorized"
                    }
                }
            }
        },
        "/api/v1/category/{uuid}": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get a category by UUID",
                "operationId": "ccdf3b819d62afd48c8aa0ba48e21241",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category details"
                    },
                    "404": {
                        "description": "Category not found"
                    }
                }
            }
        },
        "/api/v1/category/create": {
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Create a new category",
                "operationId": "9d7de7886371837461729378e605065d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "title",
                                    "slug"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string"
                                    },
                                    "slug": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Category created successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/v1/file/upload": {
            "post": {
                "tags": [
                    "File"
                ],
                "summary": "Upload a file",
                "operationId": "592c4420cc7bd3f49631e5cdd90c7ab8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "File uploaded successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "uuid": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "integer",
                                            "example": 0
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": []
                                        },
                                        "extra": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "integer",
                                            "example": 0
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": []
                                        },
                                        "extra": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "integer",
                                            "example": 0
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": []
                                        },
                                        "extra": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/file/{uuid}": {
            "get": {
                "tags": [
                    "File"
                ],
                "summary": "Download a file",
                "operationId": "2b862bf5beab696058704988dca9357f",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File downloaded successfully",
                        "headers": {
                            "Content-Disposition": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "integer",
                                            "example": 0
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": []
                                        },
                                        "extra": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "integer",
                                            "example": 0
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": []
                                        },
                                        "extra": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/user/create": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Create User account",
                "operationId": "66330b6b71df40b2272665046a5fcb85",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "last_name",
                                    "email",
                                    "password",
                                    "password_confirmation",
                                    "address",
                                    "phone_number"
                                ],
                                "properties": {
                                    "first_name": {
                                        "description": "The user's first name",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "last_name": {
                                        "description": "The user's last name",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "email": {
                                        "description": "The user's email address",
                                        "type": "string",
                                        "format": "email",
                                        "example": ""
                                    },
                                    "password": {
                                        "description": "The user's password",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "password_confirmation": {
                                        "description": "Password confirmation",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "address": {
                                        "description": "The user's address",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "phone_number": {
                                        "description": "The user's phone number",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "is_marketing": {
                                        "description": "Marketing consent",
                                        "type": "boolean",
                                        "example": "",
                                        "nullable": true
                                    },
                                    "avatar": {
                                        "description": "The user's avatar URL",
                                        "type": "string",
                                        "example": "",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "data": {
                                            "properties": {
                                                "uuid": {
                                                    "type": "string"
                                                },
                                                "first_name": {
                                                    "type": "string",
                                                    "example": ""
                                                },
                                                "last_name": {
                                                    "type": "string",
                                                    "example": ""
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": ""
                                                },
                                                "address": {
                                                    "type": "string",
                                                    "example": ""
                                                },
                                                "phone_number": {
                                                    "type": "string",
                                                    "example": ""
                                                },
                                                "is_marketing": {
                                                    "type": "integer",
                                                    "example": 0
                                                },
                                                "avatar": {
                                                    "type": "string",
                                                    "example": ""
                                                },
                                                "updated_at": {
                                                    "type": "date-time"
                                                },
                                                "created_at": {
                                                    "type": "date-time"
                                                },
                                                "token": {
                                                    "type": "string",
                                                    "example": ""
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": []
                                        },
                                        "extra": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "integer",
                                            "example": 0
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": []
                                        },
                                        "extra": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "integer",
                                            "example": 0
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": []
                                        },
                                        "extra": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/user/login": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Login a user",
                "operationId": "bffef4260a4d121b21a87bc257e22763",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "The user's email address",
                                        "type": "string",
                                        "format": "email",
                                        "example": ""
                                    },
                                    "password": {
                                        "description": "The user's password",
                                        "type": "string",
                                        "example": ""
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "properties": {
                                                "token": {
                                                    "description": "JWT token",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "integer",
                                            "example": 0
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": []
                                        },
                                        "extra": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "integer",
                                            "example": 0
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": []
                                        },
                                        "extra": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/user/logout": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Logout user",
                "description": "Logout the authenticated user by invalidating their JWT token.",
                "operationId": "logoutUser",
                "responses": {
                    "200": {
                        "description": "Successfully logged out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "integer",
                                            "example": 0
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": []
                                        },
                                        "extra": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "integer",
                                            "example": 0
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": []
                                        },
                                        "extra": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/user": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get logged-in user",
                "description": "Returns the data of the authenticated user",
                "operationId": "getUser",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved user data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "first_name": {
                                                    "type": "string",
                                                    "example": "John"
                                                },
                                                "last_name": {
                                                    "type": "string",
                                                    "example": "Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "user@example.com"
                                                },
                                                "address": {
                                                    "type": "string",
                                                    "example": "123 Main St"
                                                },
                                                "phone_number": {
                                                    "type": "string",
                                                    "example": "+1234567890"
                                                },
                                                "is_marketing": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "avatar": {
                                                    "type": "string",
                                                    "example": "avatar.png"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "integer",
                                            "example": 0
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": []
                                        },
                                        "extra": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "integer",
                                            "example": 0
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": []
                                        },
                                        "extra": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Delete logged-in user",
                "description": "Deletes the authenticated user and their token",
                "operationId": "deleteUser",
                "responses": {
                    "200": {
                        "description": "Successfully deleted user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "integer",
                                            "example": 0
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": []
                                        },
                                        "extra": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "integer",
                                            "example": 0
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": []
                                        },
                                        "extra": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/user/edit": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Edit logged-in user details",
                "description": "Edit the details of the authenticated user",
                "operationId": "editUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "last_name",
                                    "email",
                                    "address",
                                    "phone_number"
                                ],
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "john.doe@example.com"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "123 Main St"
                                    },
                                    "phone_number": {
                                        "type": "string",
                                        "example": "1234567890"
                                    },
                                    "is_marketing": {
                                        "type": "boolean",
                                        "example": true,
                                        "nullable": true
                                    },
                                    "avatar": {
                                        "type": "string",
                                        "example": "avatar.png",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully updated user details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "data": {
                                            "properties": {
                                                "first_name": {
                                                    "type": "string",
                                                    "example": "John"
                                                },
                                                "last_name": {
                                                    "type": "string",
                                                    "example": "Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john.doe@example.com"
                                                },
                                                "address": {
                                                    "type": "string",
                                                    "example": "123 Main St"
                                                },
                                                "phone_number": {
                                                    "type": "string",
                                                    "example": "1234567890"
                                                },
                                                "is_marketing": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "avatar": {
                                                    "type": "string",
                                                    "example": "avatar.png"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "integer",
                                            "example": 0
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": []
                                        },
                                        "extra": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "integer",
                                            "example": 0
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": []
                                        },
                                        "extra": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/user/forgot-password": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Forgot Password",
                "description": "Generates a password reset token for the user",
                "operationId": "forgotPassword",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset token generated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "data": {
                                            "properties": {
                                                "reset_token": {
                                                    "type": "string",
                                                    "example": "token_value"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "integer",
                                            "example": 0
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": []
                                        },
                                        "extra": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "integer",
                                            "example": 0
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "integer",
                                            "example": 0
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": []
                                        },
                                        "extra": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/user/reset-password": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Reset Password",
                "description": "Resets the password using a reset token",
                "operationId": "resetPasswordToken",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "token",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "token": {
                                        "type": "string",
                                        "example": "reset_token_value"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "new_password"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "new_password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password has been successfully updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "data": {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "Password has been successfully updated"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "integer",
                                            "example": 0
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": []
                                        },
                                        "extra": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "integer",
                                            "example": 0
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "integer",
                                            "example": 0
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": []
                                        },
                                        "extra": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Admin",
            "description": "Admin API endpoint"
        },
        {
            "name": "Categories",
            "description": "API Endpoints for Categories"
        },
        {
            "name": "File",
            "description": "File API endpoint"
        },
        {
            "name": "User",
            "description": "User API endpoint"
        }
    ]
}